openapi: 3.0.3

info:
    title: CoCart - Cart API v2
    description: Decouple your WooCommerce store with ease with our developer friendly REST API extension.
    termsOfService: http://cocartapi.com/terms-of-conditions-polar/
    contact:
        email: support@cocartapi.com
    license:
        name: GNU General Public License v3.0
        url: http://www.gnu.org/licenses/gpl-3.0.html
    version: "4.4" # Version of core plugin the spec was last updated from.

externalDocs:
    description: Find out more about CoCart API
    url: https://docs.cocartapi.com

security:
    - {}
    - basicAuth: []
    - bearerAuth: []

servers:
    - url: "{protocol}://{host}/wp-json/cocart/v2"
      description: API v2
      variables:
          protocol:
              enum: [http, https]
              default: https
          host:
              default: example-store.com
              description: Your store domain

tags:
    - name: cart
      description: Operations for managing the shopping cart
    - name: items
      description: Operations for managing cart items
    - name: coupons
      description: Operations for managing cart coupons
    - name: fees
      description: Operations for managing cart fees
    - name: shipping
      description: Operations for managing shipping methods and rates
    - name: calculate
      description: Operations for calculating cart totals
    - name: customers
      description: Operations for managing customers
    - name: store
      description: Operations for retrieving store information
    - name: products
      description: Operations for managing products

components:
    securitySchemes:
        basicAuth:
            type: http
            scheme: basic
            description: Basic authentication with username and password (optional)
        bearerAuth:
            type: http
            scheme: bearer
            description: Bearer authentication with JWT token
            bearerFormat: JWT

    schemas:
        Error:
            type: object
            properties:
                code:
                    type: string
                message:
                    type: string
                status:
                    type: integer
                data:
                    type: object

        CartResponse:
            type: object
            description: Response containing cart data including items, totals, and other details
            properties:
                cart_hash:
                    type: string
                    description: "A unique hash key of the cart contents"
                cart_key:
                    type: string
                    description: "The cart key identifying the cart in session"
                currency:
                    $ref: "#/components/schemas/Currency"
                customer:
                    $ref: "#/components/schemas/Customer"
                items:
                    type: array
                    description: "List of items in the cart"
                    items:
                        $ref: "#/components/schemas/CartItem"
                item_count:
                    type: integer
                    description: "Total number of items in cart"
                items_weight:
                    type: string
                    description: "Total weight of items in cart"
                coupons:
                    type: array
                    description: "Applied coupon codes"
                    items:
                        $ref: "#/components/schemas/Coupon"
                needs_payment:
                    type: boolean
                    description: "Whether cart requires payment"
                needs_shipping:
                    type: boolean
                    description: "Whether cart requires shipping"
                shipping:
                    $ref: "#/components/schemas/Shipping"
                fees:
                    type: object
                    description: "Additional fees applied to cart"
                    additionalProperties:
                        $ref: "#/components/schemas/Fee"
                taxes:
                    type: object
                    description: "Tax breakdowns"
                    additionalProperties:
                        $ref: "#/components/schemas/Tax"
                totals:
                    $ref: "#/components/schemas/Totals"
                removed_items:
                    type: array
                    description: "Items removed from cart"
                    items:
                        $ref: "#/components/schemas/RemovedItem"
                cross_sells:
                    type: array
                    description: "Suggested cross-sell products"
                    items:
                        $ref: "#/components/schemas/CrossSellItem"
                notices:
                    $ref: "#/components/schemas/Notices"

        Coupon:
            type: object
            properties:
                coupon:
                    type: string
                label:
                    type: string
                value:
                    type: string
                discount_type:
                    type: string
                totals:
                    type: object
                    properties:
                        discount:
                            type: string
                        discount_tax:
                            type: string

        Fee:
            type: object
            required:
                - name
                - amount
            properties:
                name:
                    type: string
                    description: Name of the fee
                amount:
                    type: string
                    description: Amount for the fee
                taxable:
                    type: boolean
                    default: false
                    description: Determines if the fee is taxable
                tax_class:
                    type: string
                    description: The tax class the fee applies to

        Currency:
            type: object
            description: Store currency formatting details
            properties:
                currency_code:
                    type: string
                    description: "The currency code (in ISO format) for returned prices"
                currency_symbol:
                    type: string
                    description: "The currency symbol which can be used to format returned prices"
                currency_symbol_pos:
                    type: string
                    description: "The currency symbol position for returned prices"
                currency_minor_unit:
                    type: integer
                    description: "The currency minor unit (number of digits after the decimal separator)"
                currency_decimal_separator:
                    type: string
                    description: "The decimal separator for the currency"
                currency_thousand_separator:
                    type: string
                    description: "The thousand separator for the currency"
                currency_prefix:
                    type: string
                    description: "The currency prefix"
                currency_suffix:
                    type: string
                    description: "The currency suffix"

        Customer:
            type: object
            properties:
                billing_address:
                    $ref: "#/components/schemas/Address"
                shipping_address:
                    $ref: "#/components/schemas/Address"

        Address:
            type: object
            description: Customer billing or shipping address details
            properties:
                first_name:
                    type: string
                    description: "Customer's first name"
                last_name:
                    type: string
                    description: "Customer's last name"
                company:
                    type: string
                    description: "Company name if applicable"
                address_1:
                    type: string
                    description: "First line of address"
                address_2:
                    type: string
                    description: "Second line of address"
                city:
                    type: string
                    description: "City name"
                state:
                    type: string
                    description: "State code or name"
                postcode:
                    type: string
                    description: "Postal/ZIP code"
                country:
                    type: string
                    description: "Country code"
                email:
                    type: string
                    description: "Email address"
                phone:
                    type: string
                    description: "Phone number"

        CartItem:
            type: object
            description: A product item in the cart with its details
            properties:
                item_key:
                    type: string
                    description: "Unique key identifier for the cart item"
                id:
                    type: integer
                    description: "Product ID or variation ID"
                name:
                    type: string
                    description: "Product name as stored in the database"
                title:
                    type: string
                    description: "Product title for display"
                price:
                    type: string
                    description: "Product price in monetary format"
                quantity:
                    type: object
                    description: "Product quantity details"
                    properties:
                        value:
                            type: number
                            description: "Current quantity in cart"
                        min_purchase:
                            type: number
                            description: "Minimum quantity that can be purchased"
                        max_purchase:
                            type: number
                            description: "Maximum quantity that can be purchased"
                totals:
                    type: object
                    properties:
                        subtotal:
                            type: string
                        subtotal_tax:
                            type: string
                        total:
                            type: string
                        tax:
                            type: string
                slug:
                    type: string
                meta:
                    type: object
                    properties:
                        product_type:
                            type: string
                        sku:
                            type: string
                        dimensions:
                            type: object
                        weight:
                            type: string
                        variation:
                            type: object
                backorders:
                    type: string
                cart_item_data:
                    type: object
                featured_image:
                    type: string

        RemovedItem:
            type: object
            properties:
                item_key:
                    type: string
                id:
                    type: integer
                name:
                    type: string
                quantity:
                    type: number
                price:
                    type: string
                totals:
                    type: object
                cart_item_data:
                    type: object
                    description: Additional cart item data
                    additionalProperties: true
                featured_image:
                    type: string
                    format: uri
                    description: URL of product featured image

        CrossSellItem:
            type: object
            properties:
                id:
                    type: integer
                name:
                    type: string
                slug:
                    type: string
                price:
                    type: string
                regular_price:
                    type: string
                sale_price:
                    type: string
                image:
                    type: string
                average_rating:
                    type: string
                on_sale:
                    type: boolean
                type:
                    type: string

        Tax:
            type: object
            description: Tax details for an item or cart
            properties:
                name:
                    type: string
                    description: "Tax rate name/label"
                price:
                    type: string
                    description: "Tax amount in monetary format"

        Totals:
            type: object
            properties:
                subtotal:
                    type: string
                subtotal_tax:
                    type: string
                fee_total:
                    type: string
                fee_tax:
                    type: string
                discount_total:
                    type: string
                discount_tax:
                    type: string
                shipping_total:
                    type: string
                shipping_tax:
                    type: string
                total:
                    type: string
                total_tax:
                    type: string

        Notices:
            type: object
            properties:
                success:
                    type: array
                    items:
                        type: string
                info:
                    type: array
                    items:
                        type: string
                error:
                    type: array
                    items:
                        type: string

        Shipping:
            type: object
            properties:
                total_packages:
                    type: integer
                show_package_details:
                    type: boolean
                has_calculated_shipping:
                    type: boolean
                packages:
                    type: object
                    additionalProperties:
                        $ref: "#/components/schemas/ShippingPackage"

        ShippingPackage:
            type: object
            properties:
                package_name:
                    type: string
                rates:
                    type: object
                    additionalProperties:
                        $ref: "#/components/schemas/ShippingRate"
                package_details:
                    type: string
                index:
                    type: string
                chosen_method:
                    type: string
                formatted_destination:
                    type: string

        ShippingRate:
            type: object
            description: Available shipping rate details
            properties:
                key:
                    type: string
                    description: "Unique key for shipping rate"
                method_id:
                    type: string
                    description: "Shipping method identifier"
                instance_id:
                    type: integer
                    description: "Instance ID for shipping method"
                label:
                    type: string
                    description: "Display label for shipping method"
                cost:
                    type: string
                    description: "Cost amount for shipping method"
                html:
                    type: string
                    description: "Formatted HTML label"
                taxes:
                    type: string
                    description: "Tax amount for shipping method"
                chosen_method:
                    type: boolean
                    description: Whether this is the chosen method
                meta_data:
                    type: object
                    description: Additional shipping rate metadata
                    additionalProperties: true

        Product:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the product
                parent_id:
                    type: integer
                    description: Product parent ID
                name:
                    type: string
                    description: Product name
                type:
                    type: string
                    description: Product type (simple, variable, etc)
                slug:
                    type: string
                    description: Product slug
                permalink:
                    type: string
                    description: Product URL
                sku:
                    type: string
                    description: Unique SKU identifier
                description:
                    type: string
                    description: Full product description
                short_description:
                    type: string
                    description: Short product description
                prices:
                    type: object
                    properties:
                        price:
                            type: string
                        regular_price:
                            type: string
                        sale_price:
                            type: string
                        price_range:
                            type: object
                            properties:
                                from:
                                    type: string
                                to:
                                    type: string
                        on_sale:
                            type: boolean
                images:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                            src:
                                type: object
                            name:
                                type: string
                            alt:
                                type: string
                attributes:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                            name:
                                type: string
                            options:
                                type: object
                variations:
                    type: array
                    items:
                        type: object
                stock:
                    type: object
                    properties:
                        is_in_stock:
                            type: boolean
                        stock_quantity:
                            type: integer
                        stock_status:
                            type: string
                categories:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                            name:
                                type: string
                            slug:
                                type: string
                tags:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                            name:
                                type: string
                            slug:
                                type: string
                meta_data:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                            key:
                                type: string
                            value:
                                type: string

        ProductVariation:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the variation
                parent_id:
                    type: integer
                    description: Parent product ID
                name:
                    type: string
                    description: Product name
                sku:
                    type: string
                    description: Unique SKU identifier
                description:
                    type: string
                    description: Variation description
                permalink:
                    type: string
                    description: Variation URL
                prices:
                    type: object
                    properties:
                        price:
                            type: string
                        regular_price:
                            type: string
                        sale_price:
                            type: string
                        on_sale:
                            type: boolean
                        date_on_sale:
                            type: object
                            properties:
                                from:
                                    type: string
                                    format: date-time
                                from_gmt:
                                    type: string
                                    format: date-time
                                to:
                                    type: string
                                    format: date-time
                                to_gmt:
                                    type: string
                                    format: date-time
                        currency:
                            $ref: "#/components/schemas/Currency"
                attributes:
                    type: array
                    description: List of variation attributes
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                                description: Attribute ID
                            name:
                                type: string
                                description: Attribute name
                            option:
                                type: string
                                description: Selected attribute term
                images:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                            src:
                                type: object
                                description: Image URLs for each registered size
                            name:
                                type: string
                            alt:
                                type: string
                stock:
                    type: object
                    properties:
                        is_in_stock:
                            type: boolean
                            description: Whether the variation is in stock
                        stock_quantity:
                            type: integer
                            description: Available stock quantity
                        stock_status:
                            type: string
                            description: Stock status (instock, outofstock, onbackorder)
                        backorders:
                            type: string
                            description: Backorder status
                        backorders_allowed:
                            type: boolean
                            description: Whether backorders are allowed
                        backordered:
                            type: boolean
                            description: Whether the variation is backordered
                        low_stock_amount:
                            type: integer
                            description: Low stock threshold
                dimensions:
                    type: object
                    properties:
                        length:
                            type: string
                        width:
                            type: string
                        height:
                            type: string
                        unit:
                            type: string
                weight:
                    type: object
                    properties:
                        value:
                            type: string
                        unit:
                            type: string
                meta_data:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                type: integer
                            key:
                                type: string
                            value:
                                type: string
                add_to_cart:
                    type: object
                    properties:
                        is_purchasable:
                            type: boolean
                            description: Whether variation can be purchased
                        purchase_quantity:
                            type: object
                            properties:
                                min_purchase:
                                    type: integer
                                    description: Minimum purchase quantity
                                max_purchase:
                                    type: integer
                                    description: Maximum purchase quantity
                        rest_url:
                            type: string
                            format: uri
                            description: Add to cart endpoint URL

        Category:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the category
                name:
                    type: string
                    description: Category name
                slug:
                    type: string
                    description: Category slug
                parent:
                    type: integer
                    description: Parent category ID
                description:
                    type: string
                    description: Category description
                display:
                    type: string
                    description: Category display type
                image:
                    type: object
                    properties:
                        id:
                            type: integer
                        src:
                            type: string
                        name:
                            type: string
                        alt:
                            type: string
                menu_order:
                    type: integer
                    description: Category order
                count:
                    type: integer
                    description: Number of products in category

        Tag:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the tag
                name:
                    type: string
                    description: Tag name
                slug:
                    type: string
                    description: Tag slug
                description:
                    type: string
                    description: Tag description
                count:
                    type: integer
                    description: Number of products with this tag

        Review:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the review
                product_id:
                    type: integer
                    description: ID of the reviewed product
                status:
                    type: string
                    description: Review status
                reviewer:
                    type: string
                    description: Name of reviewer
                reviewer_email:
                    type: string
                    description: Email of reviewer
                review:
                    type: string
                    description: Review content
                rating:
                    type: integer
                    description: Review rating (1-5)
                verified:
                    type: boolean
                    description: Whether the reviewer purchased the product
                date_created:
                    type: string
                    format: date-time
                    description: Date review was created

        Attribute:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the attribute
                name:
                    type: string
                    description: Attribute name
                slug:
                    type: string
                    description: Attribute slug
                type:
                    type: string
                    description: Attribute type
                order_by:
                    type: string
                    description: Sort order
                has_archives:
                    type: boolean
                    description: Whether attribute has archive pages

        Term:
            type: object
            properties:
                id:
                    type: integer
                    description: Unique identifier for the term
                name:
                    type: string
                    description: Term name
                slug:
                    type: string
                    description: Term slug
                description:
                    type: string
                    description: Term description
                menu_order:
                    type: integer
                    description: Term order
                count:
                    type: integer
                    description: Number of products with this term

    responses:
        Error400:
            description: Bad request
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"

        Error404:
            description: Not found
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Error"

paths:
    /cart:
        get:
            tags:
                - cart
            summary: Get the full cart contents
            parameters:
                - name: cart_key
                  in: query
                  required: false
                  description: Unique identifier for the cart
                  schema:
                      type: string
                - name: fields
                  in: query
                  required: false
                  description: Comma-separated list of fields to return
                  schema:
                      type: string
                - name: thumb
                  in: query
                  required: false
                  description: Include product thumbnail URLs
                  schema:
                      type: boolean
                      default: false
                - name: default
                  in: query
                  required: false
                  description: Return default cart data
                  schema:
                      type: boolean
                      default: false
            responses:
                "200":
                    description: Cart contents retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    cart_hash:
                                        type: string
                                    cart_key:
                                        type: string
                                    currency:
                                        $ref: "#/components/schemas/Currency"
                                    customer:
                                        $ref: "#/components/schemas/Customer"
                                    items:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/CartItem"
                                    item_count:
                                        type: integer
                                    items_weight:
                                        type: string
                                    coupons:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Coupon"
                                    needs_payment:
                                        type: boolean
                                    needs_shipping:
                                        type: boolean
                                    shipping:
                                        $ref: "#/components/schemas/Shipping"
                                    fees:
                                        type: object
                                        additionalProperties:
                                            $ref: "#/components/schemas/Fee"
                                    taxes:
                                        type: object
                                        additionalProperties:
                                            $ref: "#/components/schemas/Tax"
                                    totals:
                                        $ref: "#/components/schemas/Totals"
                                    removed_items:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/RemovedItem"
                                    cross_sells:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/CrossSellItem"
                                    notices:
                                        $ref: "#/components/schemas/Notices"

    /cart/add-item:
        post:
            tags:
                - items
            summary: Add item to cart
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - id
                            properties:
                                id:
                                    type: string
                                    description: Product ID or variation ID
                                quantity:
                                    type: string
                                    description: Quantity to add
                                    default: "1"
                                variation:
                                    type: object
                                    description: Variation attributes
                                item_data:
                                    type: object
                                    description: Custom item data
                                email:
                                    type: string
                                    description: Customer billing email
                                    format: email
                                phone:
                                    type: string
                                    description: Customer billing phone
                                price:
                                    type: string
                                    description: Custom item price
                                return_item:
                                    type: boolean
                                    description: Return added item details
                                    default: false
                        examples:
                            simple:
                                summary: Add simple product
                                value:
                                    id: "123"
                                    quantity: "1"
                            variation:
                                summary: Add product variation
                                value:
                                    id: "123"
                                    variation:
                                        size: "Large"
                                        color: "Blue"
                                    quantity: "2"
                            custom-data:
                                summary: Add with custom item data
                                value:
                                    id: "123"
                                    quantity: "1"
                                    item_data:
                                        gift_wrap: true
                                        message: "Happy Birthday!"
            responses:
                "200":
                    description: Item added successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"
                "400":
                    $ref: "#/components/responses/Error400"
                "404":
                    $ref: "#/components/responses/Error404"

    /cart/add-items:
        post:
            tags:
                - items
            summary: Add multiple items to cart
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - id
                                - quantity
                            properties:
                                id:
                                    type: string
                                    description: Container product ID
                                quantity:
                                    type: object
                                    description: Map of product IDs to quantities
                                email:
                                    type: string
                                    format: email
                                    description: Customer billing email
                                phone:
                                    type: string
                                    description: Customer billing phone
                                return_items:
                                    type: boolean
                                    description: Return added items details
                                    default: false
            responses:
                "200":
                    description: Items added successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"
                "400":
                    $ref: "#/components/responses/Error400"
                "404":
                    $ref: "#/components/responses/Error404"

    /cart/calculate:
        post:
            tags:
                - calculate
            summary: Calculate cart totals
            parameters:
                - name: return_totals
                  in: query
                  required: false
                  description: Return calculated totals
                  schema:
                      type: boolean
                      default: false
            responses:
                "200":
                    description: Cart totals calculated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"

    /cart/clear:
        post:
            tags:
                - cart
            summary: Clear the cart
            parameters:
                - name: keep_removed_items
                  in: query
                  required: false
                  description: Keeps removed items in session when clearing the cart
                  schema:
                      type: boolean
                      default: false
            responses:
                "200":
                    description: Cart cleared successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"
                "406":
                    description: Failed to clear cart
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /cart/apply-coupon:
        post:
            tags:
                - coupons
            summary: Apply coupon to cart (CoCart Plus v2+ required)
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - code
                            properties:
                                code:
                                    type: string
                                    description: Coupon code to apply
                                email:
                                    type: string
                                    description: Customer email to validate coupon against
                                    format: email
            responses:
                "200":
                    description: Coupon applied successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"
                "404":
                    description: Error applying coupon
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            examples:
                                coupon-not-exist:
                                    value:
                                        code: cocart_coupon_not_exist
                                        message: 'Coupon "INVALID" does not exist!'
                                        status: 404
                                coupons-disabled:
                                    value:
                                        code: cocart_coupons_not_enabled
                                        message: "Coupons are not enabled for this store!"
                                        status: 404
                                empty-code:
                                    value:
                                        code: cocart_coupon_code_required
                                        message: "No coupon code provided!"
                                        status: 404
                                empty-cart:
                                    value:
                                        code: cocart_coupon_cannot_add
                                        message: "Coupon cannot be applied to cart with no items."
                                        status: 404

    /cart/coupons:
        get:
            tags:
                - coupons
            summary: Get applied coupons (CoCart Plus v2+ required)
            responses:
                "200":
                    description: Applied coupons retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Coupon"
                "404":
                    description: No coupons found or error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        delete:
            tags:
                - coupons
            summary: Remove all coupons (CoCart Plus v2+ required)
            responses:
                "200":
                    description: All coupons removed successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"

    /cart/coupons/{code}:
        delete:
            tags:
                - coupons
            summary: Remove Coupon by Code (CoCart Plus v2+ required)
            parameters:
                - name: code
                  in: path
                  required: true
                  schema:
                      type: string
            responses:
                "200":
                    description: Coupon removed successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"

    /cart/coupons/validate:
        get:
            tags:
                - coupons
            summary: Validate applied coupons (CoCart Plus v2+ required)
            responses:
                "200":
                    description: Coupons validated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"

    /cart/items:
        delete:
            tags:
                - items
            summary: Remove all items from cart (CoCart Plus v2+ required)
            responses:
                "200":
                    description: Items removed successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"

    /cart/items/count:
        get:
            tags:
                - items
            summary: Get cart items count
            parameters:
                - name: removed_items
                  in: query
                  required: false
                  description: Set as true to count items removed from the cart
                  schema:
                      type: boolean
                      default: false
                - name: return
                  in: query
                  required: false
                  description: Return format
                  schema:
                      type: string
                      default: numeric
            responses:
                "200":
                    description: Items counted successfully
                    content:
                        application/json:
                            schema:
                                type: integer
                                description: Number of items in cart
                            examples:
                                default:
                                    value: 5
                                removed_items:
                                    summary: Count removed items
                                    value: 2
                "404":
                    description: No items found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /cart/item/{item_key}:
        post:
            tags:
                - items
            summary: Update cart item quantity
            parameters:
                - name: item_key
                  in: path
                  required: true
                  description: Unique key for the cart item
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - quantity
                            properties:
                                quantity:
                                    type: string
                                    description: New quantity for the item
                                return_status:
                                    type: boolean
                                    description: Return update status message
                                    default: false
            responses:
                "200":
                    description: Item updated successfully
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - title: Default Response
                                      $ref: "#/components/schemas/CartResponse"
                                    - title: Return Status (true)
                                      type: object
                                      description: Response if **return_status** is true
                                      properties:
                                          message:
                                              type: string
                                          quantity:
                                              type: integer
                "400":
                    $ref: "#/components/responses/Error400"
                "404":
                    $ref: "#/components/responses/Error404"

        delete:
            tags:
                - items
            summary: Remove item from cart
            parameters:
                - name: item_key
                  in: path
                  required: true
                  description: Unique identifier for the item in the cart
                  schema:
                      type: string
                - name: return_status
                  in: query
                  required: false
                  description: Returns a message after removing item from cart
                  schema:
                      type: boolean
                      default: false
            responses:
                "200":
                    description: Item removed successfully
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - title: Default Response
                                      $ref: "#/components/schemas/CartResponse"
                                    - title: Return Status (true)
                                      type: string
                                      description: String response if **return_status** is true
                "403":
                    description: Unable to remove item
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "404":
                    description: Item not found in cart
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

        put:
            tags:
                - items
            summary: Restore removed item to cart
            parameters:
                - name: item_key
                  in: path
                  required: true
                  description: Unique identifier for the removed item
                  schema:
                      type: string
                - name: return_item
                  in: query
                  required: false
                  description: Returns the item details once restored
                  schema:
                      type: boolean
                      default: false
            responses:
                "200":
                    description: Item restored successfully
                    content:
                        application/json:
                            schema:
                                oneOf:
                                    - title: Default Response
                                      $ref: "#/components/schemas/CartResponse"
                                    - title: Return Item
                                      $ref: "#/components/schemas/CartItem"
                "403":
                    description: Unable to restore item
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "404":
                    description: Item not found in removed items
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                "405":
                    description: Item already restored
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /cart/mini:
        get:
            tags:
                - cart
            summary: Get mini cart data (CoCart Plus v2+ required)
            responses:
                "200":
                    description: Mini cart data retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    cart_hash:
                                        type: string
                                    cart_key:
                                        type: string
                                    currency:
                                        type: string
                                    item_count:
                                        type: integer
                                    items:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                item_key:
                                                    type: string
                                                id:
                                                    type: integer
                                                name:
                                                    type: string
                                                variation:
                                                    type: array
                                                price:
                                                    type: string
                                                quantity:
                                                    type: integer
                                                featured_image:
                                                    type: string
                                    subtotal:
                                        type: string

    /cart/add-fee:
        post:
            tags:
                - fees
            summary: Add a fee to cart (CoCart Plus v2+ required)
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Fee"
            responses:
                "200":
                    description: Fee added successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"
                "404":
                    description: Error adding fee
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /cart/remove-fees:
        post:
            tags:
                - fees
            summary: Remove all fees from cart (CoCart Plus v2+ required)
            responses:
                "200":
                    description: Fees removed successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"

    /cart/set-shipping-method:
        post:
            tags:
                - shipping
            summary: Set shipping method for the cart (CoCart Plus v2+ required)
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - rate_id
                            properties:
                                rate_id:
                                    type: string
                                    description: The chosen rate ID for the package
                                package_id:
                                    type: string
                                    description: The ID of the package being shipped
                        examples:
                            single-package:
                                summary: Set shipping for single package
                                value:
                                    rate_id: "flat_rate:1"
                            multi-package:
                                summary: Set shipping for specific package
                                value:
                                    rate_id: "flat_rate:2"
                                    package_id: "1"
            responses:
                "200":
                    description: Shipping method set successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"
                "404":
                    description: Error response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /cart/totals:
        get:
            tags:
                - cart
            summary: Get cart totals
            parameters:
                - name: html
                  in: query
                  required: false
                  description: Return pre-formatted totals
                  schema:
                      type: boolean
                      default: false
            responses:
                "200":
                    description: Cart totals retrieved successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Totals"
                            examples:
                                default:
                                    value:
                                        subtotal: "5000"
                                        subtotal_tax: "500"
                                        fee_total: "200"
                                        fee_tax: "020"
                                        discount_total: "500"
                                        discount_tax: "050"
                                        shipping_total: "1000"
                                        shipping_tax: "100"
                                        total: "6770"
                                        total_tax: "670"
                                formatted:
                                    summary: Pre-formatted totals (when html=true)
                                    value:
                                        subtotal: "$50.00"
                                        subtotal_tax: "$5.00"
                                        fee_total: "$2.00"
                                        fee_tax: "$0.20"
                                        discount_total: "$5.00"
                                        discount_tax: "$0.50"
                                        shipping_total: "$10.00"
                                        shipping_tax: "$1.00"
                                        total: "$67.70"
                                        total_tax: "$6.70"
                "404":
                    $ref: "#/components/responses/Error404"

    /cart/update:
        post:
            tags:
                - cart
            summary: Update cart via registered callback
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - namespace
                            properties:
                                namespace:
                                    type: string
                                    description: Registered callback namespace
                                data:
                                    type: object
                                    description: Additional data passed to callback
                        examples:
                            update-customer:
                                summary: Update customer details
                                value:
                                    namespace: update-customer
                                    data:
                                        first_name: John
                                        last_name: Doe
                                        company: ACME Corp
                                        address_1: 123 Main St
                                        address_2: Apt 4B
                                        city: New York
                                        state: NY
                                        postcode: "10001"
                                        country: US
                                        email: john.doe@example.com
                                        phone: "212-555-0123"
                                        s_first_name: Jane
                                        s_last_name: Doe
                                        s_company: ACME Corp
                                        s_address_1: 456 Ship St
                                        s_address_2: Unit 7C
                                        s_city: Los Angeles
                                        s_state: CA
                                        s_postcode: "90001"
                                        s_country: US
                            update-cart:
                                summary: Update cart items quantity
                                value:
                                    namespace: update-cart
                                    data:
                                        quantity:
                                            a8a059b7bba0f76862f582c3bd53d7c4: "2"
                                            e369853df766fa44e1ed0ff613f563bd: "1"
            responses:
                "200":
                    description: Cart updated successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CartResponse"
                            examples:
                                update-customer:
                                    value:
                                        cart_hash: "912ec803b2ce49e4a541068d495ab570"
                                        cart_key: "912ec803b2ce49e4"
                                        customer:
                                            billing_address:
                                                first_name: John
                                                last_name: Doe
                                                company: ACME Corp
                                                address_1: 123 Main St
                                                address_2: Apt 4B
                                                city: New York
                                                state: NY
                                                postcode: "10001"
                                                country: US
                                                email: john.doe@example.com
                                                phone: "212-555-0123"
                                            shipping_address:
                                                first_name: Jane
                                                last_name: Doe
                                                company: ACME Corp
                                                address_1: 456 Ship St
                                                address_2: Unit 7C
                                                city: Los Angeles
                                                state: CA
                                                postcode: "90001"
                                                country: US
                                        notices:
                                            success: ["Cart updated."]
                                            error: []
                                            info: []
                                update-cart:
                                    value:
                                        cart_hash: "912ec803b2ce49e4a541068d495ab570"
                                        cart_key: "912ec803b2ce49e4"
                                        items:
                                            - item_key: "a8a059b7bba0f76862f582c3bd53d7c4"
                                              id: 123
                                              name: "Sample Product 1"
                                              quantity:
                                                  value: 2
                                                  min_purchase: 1
                                                  max_purchase: 10
                                            - item_key: "e369853df766fa44e1ed0ff613f563bd"
                                              id: 456
                                              name: "Sample Product 2"
                                              quantity:
                                                  value: 1
                                                  min_purchase: 1
                                                  max_purchase: 5
                                        notices:
                                            success: ["Cart updated."]
                                            error: []
                                            info: []
                "400":
                    $ref: "#/components/responses/Error400"
                "404":
                    $ref: "#/components/responses/Error404"

    /register:
        post:
            tags:
                - customers
            summary: Register a new customer (CoCart Plus v2+ required)
            description: Create a new customer account for the store
            security:
                - {}
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    description: Customer's email address
                                username:
                                    type: string
                                    description: Requested username (optional if auto-generation is enabled)
                                password:
                                    type: string
                                    format: password
                                    description: Requested password (optional if auto-generation is enabled)
                            required:
                                - email
                        examples:
                            complete:
                                summary: Register with all fields
                                value:
                                    email: "john.doe@example.com"
                                    username: "johndoe"
                                    password: "mysecurepass123"
                            auto-generate:
                                summary: Register with auto-generated username/password
                                value:
                                    email: "jane.smith@example.com"
            responses:
                "200":
                    description: Customer registered successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    user_id:
                                        type: integer
                                        description: Unique identifier for the customer
                                    username:
                                        type: string
                                        description: The username of the customer
                                    message:
                                        type: string
                                        description: Success message
                            examples:
                                complete:
                                    summary: Manual registration response
                                    value:
                                        user_id: 123
                                        username: "johndoe"
                                        message: "Your account was created successfully. Your login details have been sent to your email address."
                                auto-generate:
                                    summary: Auto-generated credentials response
                                    value:
                                        user_id: 124
                                        username: "janesmith"
                                        message: "Your account was created successfully and a password has been sent to your email address."
                "400":
                    description: Invalid request data
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            examples:
                                creation-failed:
                                    value:
                                        code: "cocart_registration_error_failed_creation"
                                        message: "An error occurred while creating the account."
                                        status: 400
                "404":
                    description: Invalid email or username
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            examples:
                                invalid-email:
                                    value:
                                        code: "cocart_registration_invalid_email"
                                        message: "A valid email address is required!"
                                        status: 404
                                invalid-username:
                                    value:
                                        code: "cocart_registration_error_invalid_username"
                                        message: "Please provide a valid username."
                                        status: 404
                                missing-password:
                                    value:
                                        code: "registration-error-missing-password"
                                        message: "Please enter an account password."
                                        status: 404
                "405":
                    description: Email or username already exists
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            examples:
                                email-exists:
                                    value:
                                        code: "cocart_registration_error_email_exists"
                                        message: "An account is already registered with your email address."
                                        status: 405
                                username-exists:
                                    value:
                                        code: "cocart_registration_error_username_exists"
                                        message: "An account is already registered with that username. Please choose another."
                                        status: 405

    /logout:
        post:
            tags:
                - customers
            summary: Logout current user
            description: Logs out the currently authenticated user
            security:
                - {}
            responses:
                "200":
                    description: User logged out successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: integer
                                        example: 200
                                    message:
                                        type: string
                                        example: "Logged out successfully"

    /login:
        post:
            tags:
                - customers
            summary: Get current user login details
            description: Returns login information for the currently authenticated user
            security:
                - basicAuth: []
                - bearerAuth: []
            responses:
                "200":
                    description: Login details retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    user_id:
                                        type: string
                                        description: Unique identifier for the user
                                    first_name:
                                        type: string
                                        description: User's first name
                                    last_name:
                                        type: string
                                        description: User's last name
                                    display_name:
                                        type: string
                                        description: User's display name
                                    role:
                                        type: string
                                        description: User's role(s)
                                    avatar_urls:
                                        type: object
                                        description: User's avatar URLs for different sizes
                                    email:
                                        type: string
                                        format: email
                                        description: User's email address
                                    extras:
                                        type: object
                                        description: Additional user information
                                    dev_note:
                                        type: string
                                        description: Note for developers
                "401":
                    description: Not authorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /store:
        get:
            tags:
                - store
            summary: Get store information
            description: Returns general information about the store
            security:
                - {}
            responses:
                "200":
                    description: Store information retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    version:
                                        type: string
                                        description: Version of CoCart
                                    routes:
                                        type: object
                                        description: Available API routes
                                    title:
                                        type: string
                                        description: Store name
                                    description:
                                        type: string
                                        description: Store description
                                    home_url:
                                        type: string
                                        format: uri
                                        description: Store home URL
                                    language:
                                        type: string
                                        description: Store language
                                    gmt_offset:
                                        type: string
                                        description: Store timezone offset
                                    timezone_string:
                                        type: string
                                        description: Store timezone
                                    store_address:
                                        type: object
                                        properties:
                                            address:
                                                type: string
                                            address_2:
                                                type: string
                                            city:
                                                type: string
                                            country:
                                                type: string
                                            postcode:
                                                type: string

    /products:
        get:
            tags:
                - products
            summary: List all products
            security:
                - {}
            parameters:
                - name: page
                  in: query
                  description: Current page of the collection
                  schema:
                      type: integer
                      default: 1
                - name: per_page
                  in: query 
                  description: Maximum number of items to be returned in result set
                  schema:
                      type: integer
                      default: 10
                - name: search
                  in: query
                  description: Limit results to those matching a string
                  schema:
                      type: string
                - name: category
                  in: query
                  description: Limit results to products in specific category IDs
                  schema:
                      type: array
                      items:
                          type: integer
                - name: tag
                  in: query
                  description: Limit results to products with specific tag IDs
                  schema:
                      type: array
                      items:
                          type: integer
                - name: status
                  in: query
                  description: Limit results to products with specified status
                  schema:
                      type: string
                      enum: [draft, pending, private, publish]
                      default: publish
                - name: type
                  in: query
                  description: Limit results to products of specific type
                  schema:
                      type: string
                      enum: [simple, grouped, external, variable]
                - name: sku
                  in: query
                  description: Limit results to products with specified SKU
                  schema:
                      type: string
                - name: featured
                  in: query
                  description: Limit results to featured products
                  schema:
                      type: boolean
                - name: order
                  in: query
                  description: Order sort attribute ascending or descending
                  schema:
                      type: string
                      enum: [asc, desc]
                      default: desc
                - name: orderby
                  in: query
                  description: Sort collection by object attribute
                  schema:
                      type: string
                      enum: [date, id, include, title, slug]
                      default: date
            responses:
                "200":
                    description: List of products
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    products:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/Product"
                                    page:
                                        type: integer
                                    total_pages:
                                        type: integer
                                    total_products: 
                                        type: integer

    /products/{id}:
        get:
            tags:
                - products
            summary: Get a specific product
            parameters:
                - name: id
                  in: path
                  required: true
                  description: Unique identifier for the product
                  schema:
                      type: string
            responses:
                "200":
                    description: Product data
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Product"
                "404":
                    description: Product not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /products/categories:
        get:
            tags:
                - products
            summary: List all product categories
            parameters:
                - name: page
                  in: query
                  description: Current page of the collection
                  schema:
                      type: integer
                      default: 1
                - name: per_page
                  in: query
                  description: Maximum number of items to be returned in result set
                  schema:
                      type: integer
                      default: 10
                - name: order
                  in: query
                  description: Order sort attribute ascending or descending
                  schema:
                      type: string
                      enum: [asc, desc]
                      default: desc
                - name: orderby
                  in: query
                  description: Sort collection by term attribute
                  schema:
                      type: string
                      enum: [id, include, name, slug, menu_order]
                      default: name
            responses:
                "200":
                    description: List of product categories
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Category"

    /products/{id}/variations:
        get:
            tags:
                - products
            summary: List variations for a variable product
            parameters:
                - name: id
                  in: path
                  required: true
                  description: Product ID
                  schema:
                      type: integer
                - name: page
                  in: query
                  description: Current page of variations
                  schema:
                      type: integer
                      default: 1
                - name: per_page
                  in: query
                  description: Number of variations per page
                  schema:
                      type: integer
                      default: 10
            responses:
                "200":
                    description: List of variations
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Product"

    /products/{product_id}/variations/{id}:
        get:
            tags:
                - products  
            summary: Get a specific product variation
            parameters:
                - name: product_id
                  in: path
                  required: true
                  description: Parent product ID
                  schema:
                      type: integer
                - name: id
                  in: path
                  required: true
                  description: Variation ID
                  schema:
                      type: integer
            responses:
                "200":
                    description: Product variation data
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ProductVariation"
                "404":
                    description: Product variation not found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"

    /products/tags:
        get:
            tags:
                - products
            summary: List all product tags
            parameters:
                - name: page
                  in: query
                  description: Current page of the collection
                  schema:
                      type: integer
                      default: 1
                - name: per_page
                  in: query
                  description: Maximum number of items to be returned
                  schema:
                      type: integer
                      default: 10
                - name: search
                  in: query
                  description: Search by tag name
                  schema:
                      type: string
                - name: order
                  in: query
                  description: Order sort attribute ascending or descending
                  schema:
                      type: string
                      enum: [asc, desc]
                      default: desc
                - name: orderby
                  in: query
                  description: Sort collection by term attribute
                  schema:
                      type: string
                      enum: [id, include, name, slug, menu_order]
                      default: name
            responses:
                "200":
                    description: List of product tags
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Tag"

    /products/reviews:
        get:
            tags:
                - products
            summary: List product reviews
            parameters:
                - name: page
                  in: query
                  description: Current page of the collection
                  schema:
                      type: integer
                      default: 1
                - name: per_page
                  in: query
                  description: Maximum number of items to be returned
                  schema:
                      type: integer
                      default: 10
                - name: product
                  in: query
                  description: Limit results to reviews for specific product IDs
                  schema:
                      type: array
                      items:
                          type: integer
                - name: status
                  in: query
                  description: Limit results to reviews with a specific status
                  schema:
                      type: string
                      enum: [approved, hold, spam, trash]
                      default: approved
            responses:
                "200":
                    description: List of product reviews
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Review"

    /products/attributes:
        get:
            tags:
                - products
            summary: List product attributes
            responses:
                "200":
                    description: List of product attributes
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Attribute"

    /products/attributes/{id}/terms:
        get:
            tags:
                - products
            summary: List terms for a product attribute
            parameters:
                - name: id
                  in: path
                  required: true
                  description: Attribute ID
                  schema:
                      type: integer
            responses:
                "200":
                    description: List of attribute terms
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Term"
